import React, { useEffect, useState } from 'react';

function BottomNavLink({active, item, onClick}) {
  return (
    <a href="/" className={`bottomnav-link ${active && !item.cannot_active ? 'active' : ''}`} onClick={(e) => onClick(e, item)}>
      {item.icon && <img src={item.icon} alt="" />}
      {item.name === 'home' && (
        <svg xmlns="http://www.w3.org/2000/svg" width="19" height="18" viewBox="0 0 19 18">
          <path fillRule="evenodd" clipRule="evenodd" d="M7.26214 0.553397C8.34056 -0.184466 9.76138 -0.184466 10.8398 0.553397L16.7229 4.5787C17.5859 5.16918 18.1019 6.14748 18.1019 7.19316V14.8119C18.1019 16.5615 16.6837 17.9797 14.9341 17.9797H3.16784C1.41829 17.9797 0 16.5615 0 14.8119V7.19316C0 6.14748 0.516014 5.16918 1.37902 4.5787L7.26214 0.553397ZM6.78823 13.9068C6.5383 13.9068 6.33568 14.1095 6.33568 14.3594C6.33568 14.6093 6.5383 14.8119 6.78823 14.8119H11.3137C11.5636 14.8119 11.7663 14.6093 11.7663 14.3594C11.7663 14.1095 11.5636 13.9068 11.3137 13.9068H6.78823Z" fill="currentColor"/>
        </svg>
      )}
      {item.name === 'live' && (
        <svg xmlns="http://www.w3.org/2000/svg" width="22" height="15" viewBox="0 0 22 15">
          <path d="M14.3863 12.3643C14.1773 12.3636 13.9732 12.3008 13.7994 12.1838C13.6257 12.0667 13.49 11.9006 13.4094 11.7063C13.3288 11.5119 13.3068 11.2978 13.3462 11.0909C13.3855 10.8839 13.4846 10.6933 13.6308 10.5428C14.4277 9.73531 14.8751 8.64244 14.8751 7.50321C14.8751 6.36399 14.4277 5.27111 13.6308 4.46359C13.4381 4.26047 13.3323 3.98911 13.3362 3.70803C13.34 3.42695 13.4533 3.15866 13.6515 2.96101C13.8497 2.76336 14.1171 2.65219 14.3958 2.65147C14.6746 2.65075 14.9425 2.76054 15.1417 2.95716C16.3321 4.16568 17.0001 5.79989 17.0001 7.50321C17.0001 9.20654 16.3321 10.8407 15.1417 12.0493C15.0427 12.1495 14.9249 12.2289 14.7952 12.283C14.6656 12.337 14.5266 12.3647 14.3863 12.3643ZM7.61066 12.0546C7.81099 11.8548 7.92442 11.583 7.92601 11.2989C7.9276 11.0148 7.81723 10.7417 7.61916 10.5396C6.82227 9.7321 6.37491 8.63923 6.37491 7.5C6.37491 6.36077 6.82227 5.2679 7.61916 4.46037C7.71993 4.36092 7.80007 4.24224 7.85489 4.11125C7.90972 3.98025 7.93814 3.83957 7.9385 3.69738C7.93886 3.5552 7.91115 3.41437 7.85699 3.28309C7.80283 3.15182 7.7233 3.03272 7.62304 2.93276C7.52278 2.83279 7.40378 2.75394 7.27299 2.70082C7.14221 2.64769 7.00224 2.62135 6.86125 2.62332C6.72027 2.62529 6.58108 2.65554 6.45181 2.71231C6.32253 2.76907 6.20575 2.85122 6.10828 2.95395C4.91793 4.16247 4.24988 5.79667 4.24988 7.5C4.24988 9.20333 4.91793 10.8375 6.10828 12.046C6.3064 12.2481 6.57597 12.3624 6.85771 12.364C7.13945 12.3656 7.41029 12.2543 7.61066 12.0546ZM18.5216 14.6475C20.2777 12.6881 21.25 10.1411 21.25 7.5C21.25 4.85894 20.2777 2.31191 18.5216 0.352534C18.3325 0.14183 18.0681 0.015499 17.7867 0.0013334C17.5052 -0.0128322 17.2297 0.0863275 17.0208 0.276998C16.8118 0.467669 16.6865 0.734232 16.6725 1.01805C16.6584 1.30186 16.7568 1.57968 16.9459 1.79038C18.3484 3.35576 19.1249 5.39034 19.1249 7.5C19.1249 9.60966 18.3484 11.6442 16.9459 13.2096C16.7568 13.4203 16.6584 13.6981 16.6725 13.982C16.6865 14.2658 16.8118 14.5323 17.0208 14.723C17.2297 14.9137 17.5052 15.0128 17.7867 14.9987C18.0681 14.9845 18.3325 14.8582 18.5216 14.6475ZM4.2287 14.7225C4.43757 14.5319 4.56285 14.2655 4.577 13.9818C4.59114 13.6981 4.493 13.4204 4.30414 13.2096C2.90159 11.6442 2.12511 9.60966 2.12511 7.5C2.12511 5.39034 2.90159 3.35576 4.30414 1.79038C4.39776 1.68605 4.47009 1.56415 4.517 1.43163C4.5639 1.29911 4.58446 1.15858 4.57751 1.01805C4.57055 0.877516 4.53621 0.739743 4.47646 0.612594C4.4167 0.485444 4.33269 0.371409 4.22923 0.276998C4.12577 0.182588 4.00488 0.109651 3.87346 0.0623521C3.74205 0.0150534 3.60268 -0.00568071 3.46332 0.0013334C3.18187 0.015499 2.91752 0.14183 2.72844 0.352534C0.972287 2.31191 0 4.85894 0 7.5C0 10.1411 0.972287 12.6881 2.72844 14.6475C2.91757 14.8579 3.18185 14.9841 3.46317 14.9981C3.7445 15.0122 4.01985 14.913 4.2287 14.7225ZM10.625 5.89286C10.3098 5.89286 10.0016 5.98712 9.73955 6.16372C9.47746 6.34031 9.27318 6.59131 9.15256 6.88498C9.03193 7.17864 9.00037 7.50178 9.06186 7.81354C9.12336 8.12529 9.27515 8.41165 9.49804 8.63642C9.72093 8.86118 10.0049 9.01424 10.3141 9.07625C10.6232 9.13827 10.9437 9.10644 11.2349 8.9848C11.5261 8.86316 11.775 8.65717 11.9502 8.39288C12.1253 8.12858 12.2188 7.81786 12.2188 7.5C12.2188 7.07376 12.0508 6.66498 11.752 6.36358C11.4531 6.06219 11.0477 5.89286 10.625 5.89286Z" fill="currentColor"/>
        </svg>
      )}
      {item.name === 'bets' && (
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="19" viewBox="0 0 18 19">
          <path d="M17.25 0H0.75C0.337509 0 0 0.337509 0 0.75V2.00999C0 2.42999 0.337509 2.75999 0.75 2.75999H1.46997V17.7825C1.46997 18.06 1.61998 18.315 1.86749 18.4425C2.1075 18.5775 2.40747 18.5625 2.63251 18.405L4.08 17.445C4.32747 17.28 4.6425 17.28 4.88997 17.445L6.33 18.405C6.58498 18.57 6.90747 18.57 7.16249 18.405L8.60248 17.445C8.84999 17.28 9.16498 17.28 9.41249 17.445L10.845 18.405C11.1 18.5775 11.43 18.5775 11.6775 18.405L13.1175 17.445C13.365 17.28 13.68 17.28 13.9275 17.445L15.36 18.405C15.5896 18.5536 15.8744 18.5802 16.1325 18.4425C16.38 18.315 16.53 18.06 16.53 17.7825V2.75999H17.25C17.6625 2.75999 18 2.42999 18 2.00999V0.75C18 0.337509 17.6625 0 17.25 0ZM10.53 13.395H4.84497C4.43248 13.395 4.09497 13.0575 4.09497 12.645C4.09497 12.225 4.43248 11.895 4.84497 11.895H10.53C10.9425 11.895 11.28 12.225 11.28 12.645C11.28 13.0575 10.9425 13.395 10.53 13.395ZM13.155 9.95251H4.84497C4.43248 9.95251 4.09497 9.615 4.09497 9.20251C4.09497 8.78998 4.43248 8.45251 4.84497 8.45251H13.155C13.5675 8.45251 13.905 8.78998 13.905 9.20251C13.905 9.615 13.5675 9.95251 13.155 9.95251ZM13.155 6.50999H4.84497C4.43248 6.50999 4.09497 6.17999 4.09497 5.75999C4.09497 5.3475 4.43248 5.00999 4.84497 5.00999H13.155C13.5675 5.00999 13.905 5.3475 13.905 5.75999C13.905 6.17999 13.5675 6.50999 13.155 6.50999Z" fill="currentColor"/>
        </svg>
      )}
      {item.name === 'sports' && (
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
          <path d="M17 17L13.2223 13.2156L17 17ZM15.3158 8.15789C15.3158 10.0563 14.5617 11.8769 13.2193 13.2193C11.8769 14.5617 10.0563 15.3158 8.15789 15.3158C6.2595 15.3158 4.43886 14.5617 3.0965 13.2193C1.75413 11.8769 1 10.0563 1 8.15789C1 6.2595 1.75413 4.43886 3.0965 3.0965C4.43886 1.75413 6.2595 1 8.15789 1C10.0563 1 11.8769 1.75413 13.2193 3.0965C14.5617 4.43886 15.3158 6.2595 15.3158 8.15789V8.15789Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round"/>
        </svg>
      )}
      {item.name === 'rewards' && (
        <svg xmlns="http://www.w3.org/2000/svg" width="17" height="19" viewBox="0 0 17 19">
          <path d="M8.30749 5.88194H8.08887C7.98591 5.87775 7.88533 5.84968 7.79509 5.79994C7.70484 5.7502 7.6274 5.68015 7.56888 5.59533C7.51035 5.51052 7.47235 5.41326 7.45788 5.31123C7.44341 5.2092 7.45286 5.10521 7.48549 5.00747C7.79155 4.23793 8.07138 3.4509 8.29875 2.68136C8.49113 2.08672 9.24318 0.224084 11.132 0.224084C11.8682 0.200495 12.5837 0.469917 13.1214 0.973226C13.6591 1.47654 13.9752 2.17262 14.0003 2.90872C14.0003 4.59646 12.0852 5.2873 11.3769 5.53215C10.3755 5.79347 9.34203 5.91124 8.30749 5.88194ZM11.1233 1.50956C10.1177 1.50956 9.66293 2.67262 9.54925 3.03115C9.39184 3.53835 9.22569 4.04554 9.04205 4.55274C9.66898 4.54876 10.2925 4.46052 10.8959 4.2904C11.3944 4.1155 12.6449 3.64328 12.6449 2.88249C12.618 2.50133 12.4444 2.14541 12.1607 1.88943C11.877 1.63345 11.5052 1.49731 11.1233 1.50956Z" fill="currentColor"/>
          <path d="M7.84395 5.88238C6.83191 5.9002 5.82234 5.77658 4.8445 5.5151C2.66705 4.80677 2.22107 3.69619 2.22107 2.89167C2.22473 2.55187 2.29711 2.21632 2.43387 1.90522C2.57063 1.59413 2.76894 1.31394 3.01684 1.08151C3.56811 0.526933 4.31616 0.212625 5.09809 0.207031C6.56721 0.207031 7.31052 1.57996 7.86144 2.55937C8.21946 3.36226 8.5119 4.19281 8.73591 5.04288C8.763 5.13935 8.76763 5.24074 8.74944 5.33927C8.73125 5.4378 8.69072 5.53086 8.63098 5.61129C8.57305 5.69251 8.49713 5.75925 8.40915 5.80627C8.32116 5.8533 8.2235 5.87935 8.12378 5.88238H7.84395ZM5.0019 1.51C4.58663 1.52789 4.19461 1.70665 3.90881 2.00845C3.78416 2.11837 3.68337 2.25269 3.61268 2.40309C3.54199 2.5535 3.50289 2.71681 3.4978 2.88293C3.4978 3.41636 4.14492 3.9323 5.24675 4.29083C5.88969 4.45702 6.55031 4.5451 7.21432 4.55317C7.07288 4.08748 6.90052 3.63174 6.69838 3.18899L7.21432 2.87418L6.64592 3.18899C6.13872 2.21833 5.70148 1.52749 5.02814 1.51H5.0019Z" fill="currentColor"/>
          <path d="M16.1778 8.06821V6.97512C16.1778 6.33733 15.9244 5.72565 15.4734 5.27466C15.0225 4.82368 14.4108 4.57031 13.773 4.57031H2.40481C1.76701 4.57031 1.15534 4.82368 0.704352 5.27466C0.253363 5.72565 0 6.33733 0 6.97512V8.06821H16.1778Z" fill="currentColor"/>
          <path d="M8.74463 9.37988V18.9991H13.7729C14.4107 18.9991 15.0223 18.7458 15.4733 18.2948C15.9243 17.8438 16.1777 17.2321 16.1777 16.5943V9.37988H8.74463Z" fill="currentColor"/>
          <path d="M7.43304 9.37988H0V16.5943C0 17.2321 0.253363 17.8438 0.704352 18.2948C1.15534 18.7458 1.76701 18.9991 2.40481 18.9991H7.43304V9.37988Z" fill="currentColor"/>
        </svg>
      )}
      <span>{item.label}</span>
    </a>
  )
}

export default function BottomNav({activeScreen, setActiveScreen}) {
  const navLinks = [
    {
      name: 'home',
      label: 'Home',
      // icon: 'https://res.cloudinary.com/production/image/upload/v1725375499/Icons/VIP/home.svg',
    },
    {
      name: 'live',
      label: 'Live Now',
      // icon: 'https://res.cloudinary.com/production/image/upload/v1725375499/Icons/VIP/live-now.svg',
    },
    {
      name: 'bets',
      label: 'My Bets',
      // icon: 'https://res.cloudinary.com/production/image/upload/v1725375499/Icons/VIP/bets.svg',
    },
    {
      name: 'sports',
      label: 'All Sports',
      // icon: 'https://res.cloudinary.com/production/image/upload/v1725375499/Icons/VIP/search-icon.svg',
    },
    {
      name: 'rewards',
      label: 'Rewards',
      // icon: 'https://res.cloudinary.com/production/image/upload/v1725375499/Icons/VIP/rewards.svg',
    },
  ];
  const [activeNav, setActiveNav] = useState(activeScreen || null);

  const onClick = (e, item) => {
    e.preventDefault();
    setActiveNav(item.name);
    setActiveScreen(item.name);
    return false;
  };

  return (
    <div className="bottomnav-container">
      <div className="bottomnav-links">
        {navLinks.map(item => (
          <BottomNavLink active={activeNav === item.name} item={item} key={item.name} onClick={onClick} />
        ))}
      </div>
    </div>
  )
}